name: Build and Deploy to Dev

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# see https://github.com/aiknow-public/hera-blueprint/new/main?filename=.github%2Fworkflows%2Fdocker-publish.yml&workflow_template=ci%2Fdocker-publish

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on tags matching Semantic Versioning pattern
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'ghcr.io' }}
  DOCKER_ORGANIZATION: ${{ secrets.DOCKER_ORGANIZATION ||  github.repository_owner }}
  DOCKER_IMAGE: ${{ github.event.repository.name }}
  DOCKER_USER: ${{ secrets.DOCKER_USER || github.actor }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.DOCKER_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORGANIZATION }}/${{ env.DOCKER_IMAGE }}
          flavor: |
            latest=auto
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,priority=3000,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,priority=2000

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./src/main
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-dev:
    if: github.event_name != 'pull_request'
    needs: build
    environment: dev
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
        with:
          ref: main

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.8' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r src/main/requirements.txt

      - name: execute py script
        run: |
          export TASK_IMAGE=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORGANIZATION }}/${{ env.DOCKER_IMAGE }}:$VERSION
          cd src
          python render_workflows.py
        env:
          VERSION: ${{needs.build.outputs.version}}

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Bump version
        with:
          commit_message: Auto-deploy to dev (via gitops)
  deploy-to-qa:
    if: github.event_name != 'pull_request'
    needs: deploy-to-dev
    environment: qa
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3
        with:
          ref: qa
      - name: Merge dev branch to qa
        run: |
          git fetch origin
          git merge origin/main --no-edit
          git push
